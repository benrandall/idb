{
	"info": {
		"_postman_id": "9cc02c90-1964-4313-bae4-ba8237dc7364",
		"name": "IDB",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Videos all ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "14a41fca-db4e-4d1e-9c6f-7ef6241edb72",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present and correct\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Contains items relationship with associated data\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"examine_info\");",
							"});",
							"",
							"pm.test(\"local data of non zero length\", function () {",
							"    pm.expect(pm.response.json().length).not.to.equal(0);",
							"});",
							"",
							"pm.test(\"first video repsonse url is correct\", function () {",
							"   pm.expect(pm.response.json().objects[0].video_url).to.equal(\"https://gaming.youtube.com/embed/EsxNUEIxDhg\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "localhost:5000/videos",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"videos"
					]
				},
				"description": "Tests the response from a correct request to /api/videos/all"
			},
			"response": []
		},
		{
			"name": "404 Errors Are Correct",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b7e7bf66-a7ea-40ac-a8b7-14f0a5873c0d",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present and correct\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"",
							"pm.test(\"Contains json error description\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"404 Not Found\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:5000/badreq",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"badreq"
					]
				}
			},
			"response": []
		},
		{
			"name": "Video get",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c4adcb86-c20b-44ce-b668-2efeccabec36",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present and correct\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Contains items relationship with associated data\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"examine_info\");",
							"});",
							"",
							"pm.test(\"local data items of size 1\", function () {",
							"    pm.expect(pm.response.json().items.length).to.equal(1);",
							"});",
							"",
							"pm.test(\"first video repsonse url is correct\", function () {",
							"   pm.expect(pm.response.json().video_url).to.equal(\"https://gaming.youtube.com/embed/EsxNUEIxDhg\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:5000/videos/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"videos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Skills all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bbf575fb-3567-4e93-bba8-dbfe441d725e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present and correct\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Contains items relationship with associated data\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"examine_info\");",
							"});",
							"",
							"pm.test(\"local data of non zero length\", function () {",
							"    pm.expect(pm.response.json().length).not.to.equal(0);",
							"});",
							"",
							"pm.test(\"first skill name is correct\", function () {",
							"   pm.expect(pm.response.json().objects[0].name).to.equal(\"Crafting\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:5000/skills",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"skills"
					]
				}
			},
			"response": []
		},
		{
			"name": "Skill get",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "75429526-4b9a-43be-9a2a-fd91bc63ab40",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present and correct\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Contains items relationship with associated data\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"examine_info\");",
							"});",
							"",
							"pm.test(\"local data items exist\", function () {",
							"    pm.expect(pm.response.json().items.length).not.to.equal(0);",
							"});",
							"",
							"pm.test(\"first skill name is correct\", function () {",
							"   pm.expect(pm.response.json().name).to.equal(\"Crafting\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:5000/skills/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"skills",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reddits all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b45aed94-2713-449b-9abf-e271416a861f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present and correct\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Contains items relationship with associated data\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"examine_info\");",
							"});",
							"",
							"pm.test(\"local data of non zero length\", function () {",
							"    pm.expect(pm.response.json().length).not.to.equal(0);",
							"});",
							"",
							"pm.test(\"first title is correct\", function () {",
							"   pm.expect(pm.response.json().objects[0].title).to.equal(\"Loot from cutting 119k semi-precious gems\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:5000/reddits",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"reddits"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reddit get",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "833173b4-ed7a-47c9-9673-21414298afff",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present and correct\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Contains items relationship with associated data\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"examine_info\");",
							"});",
							"",
							"pm.test(\"local data items exist\", function () {",
							"    pm.expect(pm.response.json().items.length).not.to.equal(0);",
							"});",
							"",
							"pm.test(\"first title is correct\", function () {",
							"   pm.expect(pm.response.json().title).to.equal(\"Loot from cutting 119k semi-precious gems\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:5000/reddits/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"reddits",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Items all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0ad4071a-0cb0-42fc-848f-776dcebdaee9",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present and correct\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Contains skills with associated data\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"members_only\");",
							"});",
							"",
							"pm.test(\"local data of non zero length\", function () {",
							"    pm.expect(pm.response.json().length).not.to.equal(0);",
							"});",
							"",
							"pm.test(\"first market price is correct\", function () {",
							"   pm.expect(pm.response.json().objects[0].market_price).to.equal(150);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:5000/items",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "Item get",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0415af07-1a50-435a-ab57-f09c436f7e8e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present and correct\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Contains skills relationship with associated data\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"members_only\");",
							"});",
							"",
							"pm.test(\"local data reddits exist\", function () {",
							"    pm.expect(pm.response.json().reddits.length).not.to.equal(0);",
							"});",
							"",
							"pm.test(\"market price is correct\", function () {",
							"   pm.expect(pm.response.json().market_price).to.equal(150);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:5000/items/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"items",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "About get",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "05f3fb96-1970-49e3-bb4b-285badbd6715",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present and correct\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"commit data of non zero length\", function () {",
							"    pm.expect(pm.response.json().total_commits.length).not.to.equal(0);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:5000/about",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"about"
					]
				}
			},
			"response": []
		},
		{
			"name": "Community all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bb269f75-aaea-4cf2-adca-f158a3993a45",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present and correct\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Contains reddits with associated data\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"market_price\");",
							"});",
							"",
							"pm.test(\"local reddits of non zero length\", function () {",
							"    pm.expect(pm.response.json().reddits.length).not.to.equal(0);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:5000/community",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"community"
					]
				}
			},
			"response": []
		},
		{
			"name": "Image get",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9a0399d3-7646-434f-a16c-70e890f63e13",
						"type": "text/javascript",
						"exec": [
							"tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === \"image/jpeg\";"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:5000/images/luke.jpg",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"images",
						"luke.jpg"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search query",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d24aa327-4327-4453-909f-9fa8195fb01e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"basic query has many results\", function () {",
							"    pm.expect(pm.response.json().result.length).not.to.equal(0);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:5000/search?q=sword",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"search"
					],
					"query": [
						{
							"key": "q",
							"value": "sword"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "filtering results works",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2ac138ae-0ce9-480e-a1c0-a80f7693f95c",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present and correct\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.response.to.be.json;",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"7 results from query\", function () {",
							"    pm.expect(pm.response.json().num_results).to.equal(7);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:5000/items?q=%7B%22filters%22%3A+%5B%7B%22name%22%3A+%22members_only%22%2C+%22op%22%3A+%22%3D%3D%22%2C+%22val%22%3A+true%7D%5D%7D",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"items"
					],
					"query": [
						{
							"key": "q",
							"value": "%7B%22filters%22%3A+%5B%7B%22name%22%3A+%22members_only%22%2C+%22op%22%3A+%22%3D%3D%22%2C+%22val%22%3A+true%7D%5D%7D"
						}
					]
				}
			},
			"response": []
		}
	]
}